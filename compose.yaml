services:

  rss-aggregation-api:
    image: yuvaldekel/rssagg:latest
    container_name: rss-aggregation
    hostname: rss-aggregation
    restart: always
    ports:
      - "8080:8080"
    networks:
      - rss-net
    environment:
      PORT: ${PORT}
      DB_URL: ${DB_URL}
      DB_HOST: ${DB_HOST}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_USER: ${POSTGRES_USER}
      DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rss-aggregation:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres
    restart: always
    container_name: postgres
    hostname: postgres
    shm_size: 128mb
    networks: 
      - rss-net
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - type: bind
        source: ./sql/schema
        target: /docker-entrypoint-initdb.d/
        read_only: true

volumes:
  db_data:

networks:
  rss-net: